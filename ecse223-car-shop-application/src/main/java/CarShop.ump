namespace CarShop.model;

class CarShop{
	Date date;
	String generalInfo;
	String address;
	String emailAddress;
	String phoneNumber;	
}

class Owner{
	isA UserAccount;
	1 ownedBy -- 1 CarShop owns;
}


class TechnicianAccount{
	isA UserAccount;
	unique JobType garageType;
	
	enum JobType{
	Tires,
	Engine,
	Transmission,
	Electronics,
	Fluids}
	
	5 employee -- 1 CarShop workplace;
	0..1 technician -- * TechnicianDailySchedule dailySchedule;
		
}

class User{
	String name;
	1 -- 0..1 UserAccount;
	
}

class UserAccount{
	abstract;
	unique String username;
	String password;
	Boolean isLoggedIn;
    String warningMessage;
}

class CustomerAccount{
	isA UserAccount;
}

 class TechnicianDailySchedule {
 	isA GeneralDailySchedule;
	1  -- * TimeSlot;
}

class TimeSlot {
    Date startTime;
    Date endTime;
    Integer daysBeforeAppointment;
	* -- 1 Service currentService;
}

class Service{
	unique String name;
    Boolean isCompleted;
	before constructor, setName{
		if (aName == null || aName.length() == 0) {
			throw new RuntimeException("Please enter a valid name");
			}
	}
	Double durationInHours;
	* prerequesite -- 0..1 Service successor;
	0..* servicesOffered -- 1 CarShop;

}


	
class ServiceList{
	Service firstItem;
	enum ComboType {Required, Optional}
	ComboType comboType;
	Boolean isServiceCombo;
	1 --  * Service; 
	0..1 -> 1 Service mainService;
	0..* serviceListsOffered -- 1 CarShop;
	
}

class GeneralDailySchedule{
    DayType dayType;
 	enum DayType {Holiday, Break, Work}
 	Date openingTime;
 	Date closingTime;
    Date currentDate;
    1 --  * CarShop;
}

associationClass AppointmentInfo{
    Boolean customerCanCancel;
	Integer daysBeforeAppt;
	* CustomerAccount;
	1 TimeSlot;

}